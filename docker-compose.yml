services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: training_mysql
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ../../combined_db.sql:/docker-entrypoint-initdb.d/combined_db.sql
    networks:
      - training_network
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: training_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    # networks:
    #   - training_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: training_rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - training_network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # API Gateway Service
  api_gateway:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_gateway
    env_file:
      - .env
    environment:
      APP_URL: ${APP_URL}
      COURSES_SERVICE_URL: ${COURSES_SERVICE_URL}
      TRAINEES_SERVICE_URL: ${TRAINEES_SERVICE_URL}
      EXAMS_SERVICE_URL: ${EXAMS_SERVICE_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    ports:
      - "8000:8000"
    networks:
      - training_network
    restart: unless-stopped
    depends_on:
      - mysql
      - redis
      - rabbitmq

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:

networks:
  training_network:
    driver: bridge
    name: training_network
